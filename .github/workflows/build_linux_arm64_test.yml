name: Raspberry Pi compile
on:
  workflow_dispatch:

jobs:
  build_arm:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: alist-dev/desktop
          token: ${{ secrets.MY_TOKEN }}

      - uses: pguyot/arm-runner-action@v2.5.2
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ secrets.MY_TOKEN }}
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
        with:
          base_image: https://dietpi.com/downloads/images/DietPi_RPi-ARMv8-Bullseye.7z
          cpu: cortex-a53
          bind_mount_repository: true
          image_additional_mb: 10240
          optimize_image: false
          commands: |
            # Rust complains (rightly) that $HOME doesn't match eid home
            export HOME=/root
            # Workaround to CI worker being stuck on Updating crates.io index
            export CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse
            # Install setup prerequisites
            apt-get update -y --allow-releaseinfo-change
            apt-get upgrade -y
            apt-get autoremove -y
            apt-get install curl
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            . "$HOME/.cargo/env"
            curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash
            # Install framework specific packages
            apt-get install -y nodejs git
            # npm install next@latest react@latest react-dom@latest eslint-config-next@latest
            # Install build tools and tauri-cli requirements
            apt-get install -y libwebkit2gtk-4.0-dev build-essential wget libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
            # cargo install tauri-cli
            # Install frontend dependencies
            npm install
            # download sidecar
            export TARGET_TRIPLE=aarch64-unknown-linux-gnu
            export TAURI_PRIVATE_KEY=${{ secrets.TAURI_PRIVATE_KEY }}
            npx tsx ./scripts/bin.ts
            sed -i 's/pnpm/npm run/g' src-tauri/tauri.conf.json
            # npm install -g pnpm
            # pnpm i
            # Build the application
            # cargo tauri build
            npm run tauri build 
            
      - name: print files tree
        continue-on-error: true
        run: |
          sudo apt install -y tree
          tree -C ./src-tauri/target/

      - name: Upload deb bundle
        uses: actions/upload-artifact@v4
        with:
          name: Debian Bundle
          # ${{ github.workspace }}/src-tauri/target/release/bundle/deb/
          path: |
            ./src-tauri/target/release/bundle/deb
